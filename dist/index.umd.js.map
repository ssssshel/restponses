{"version":3,"file":"index.umd.js","sources":["../src/interfaces/status_codes_defaults.ts","../index.ts"],"sourcesContent":["export interface HttpStatus {\r\n  Code: StatusCode;\r\n  Message: string;\r\n  Details?: string;\r\n}\r\n\r\nexport enum StatusCode {\r\n  Status100 = 100,\r\n  Status101 = 101,\r\n  Status102 = 102,\r\n  Status103 = 103,\r\n\r\n  Status200 = 200,\r\n  Status201 = 201,\r\n  Status202 = 202,\r\n  Status203 = 203,\r\n  Status204 = 204,\r\n  Status205 = 205,\r\n  Status206 = 206,\r\n  Status207 = 207,\r\n  Status208 = 208,\r\n  Status226 = 226,\r\n\r\n  Status300 = 300,\r\n  Status301 = 301,\r\n  Status302 = 302,\r\n  Status303 = 303,\r\n  Status304 = 304,\r\n  Status305 = 305,\r\n  Status307 = 307,\r\n  Status308 = 308,\r\n\r\n  Status400 = 400,\r\n  Status401 = 401,\r\n  Status402 = 402,\r\n  Status403 = 403,\r\n  Status404 = 404,\r\n  Status405 = 405,\r\n  Status406 = 406,\r\n  Status407 = 407,\r\n  Status408 = 408,\r\n  Status409 = 409,\r\n  Status410 = 410,\r\n  Status411 = 411,\r\n  Status412 = 412,\r\n  Status413 = 413,\r\n  Status414 = 414,\r\n  Status415 = 415,\r\n  Status416 = 416,\r\n  Status417 = 417,\r\n  Status418 = 418,\r\n  Status421 = 421,\r\n  Status422 = 422,\r\n  Status423 = 423,\r\n  Status424 = 424,\r\n  Status425 = 425,\r\n  Status426 = 426,\r\n  Status428 = 428,\r\n  Status429 = 429,\r\n  Status431 = 431,\r\n  Status451 = 451,\r\n\r\n  Status500 = 500,\r\n  Status501 = 501,\r\n  Status502 = 502,\r\n  Status503 = 503,\r\n  Status504 = 504,\r\n  Status505 = 505,\r\n  Status506 = 506,\r\n  Status507 = 507,\r\n  Status508 = 508,\r\n  Status509 = 509,\r\n  Status510 = 510,\r\n  Status511 = 511,\r\n  Status521 = 521,\r\n}\r\n\r\ninterface IDefaultStateContent {\r\n  [key: string]: HttpStatus;\r\n}\r\n\r\nexport const defaultStatesContent: IDefaultStateContent = {\r\n  \"Status100Continue\": {\r\n    Code: StatusCode.Status100,\r\n    Message: \"Continue\",\r\n    Details:\r\n      \"Continue with the request\",\r\n  },\r\n  \"Status101SwitchingProtocols\": {\r\n    Code: StatusCode.Status101,\r\n    Message: \"Switching Protocols\",\r\n    // Details: \"\"\r\n  },\r\n  \"Status102Processing\": {\r\n    Code: StatusCode.Status102,\r\n    Message: \"Processing\",\r\n    // Details: \"\"\r\n  },\r\n  \"Status103EarlyHints\": {\r\n    Code: StatusCode.Status103,\r\n    Message: \"Checkpoint\",\r\n    // Details: \"\"\r\n  },\r\n\r\n  \"Status200OK\": {\r\n    Code: StatusCode.Status200,\r\n    Message: \"OK\",\r\n    Details: \"The request has been successfully processed\"\r\n  },\r\n  \"Status201Created\": {\r\n    Code: StatusCode.Status201,\r\n    Message: \"Created\",\r\n    Details: \"Resource successfully created\"\r\n  },\r\n  \"Status202Accepted\": {\r\n    Code: StatusCode.Status202,\r\n    Message: \"Accepted\",\r\n    Details: \"The request has been accepted for processing\"\r\n  },\r\n  \"Status203NonAuthoritativeInformation\": {\r\n    Code: StatusCode.Status203,\r\n    Message: \"Non-Authoritative Information\",\r\n    Details: \"Non-Authoritative Information returned\"\r\n  },\r\n  // \"Status204NoContent\": {\r\n  //   Code: StatusCode.Status204,\r\n  //   Message: \"No Content\",\r\n  //   Details: \"The request has been successfully processed, but no content is returned\"\r\n  // },\r\n  \"Status205ResetContent\": {\r\n    Code: StatusCode.Status205,\r\n    Message: \"Reset Content\",\r\n    Details: \"The request has been successfully processed, but no content is returned\"\r\n  },\r\n  \"Status206PartialContent\": {\r\n    Code: StatusCode.Status206,\r\n    Message: \"Partial Content\",\r\n    Details: \"Partial Content returned\"\r\n  },\r\n  \"Status207MultiStatus\": {\r\n    Code: StatusCode.Status207,\r\n    Message: \"Multi-Status\",\r\n    Details: \"Multi-Status returned\"\r\n  },\r\n  \"Status208AlreadyReported\": {\r\n    Code: StatusCode.Status208,\r\n    Message: \"Already Reported\",\r\n    Details: \"Resource already reported\"\r\n  },\r\n  \"Status226IMUsed\": {\r\n    Code: StatusCode.Status226,\r\n    Message: \"IM Used\",\r\n    Details: \"IM Used\"\r\n  },\r\n\r\n  \"Status300MultipleChoices\": {\r\n    Code: StatusCode.Status300,\r\n    Message: \"Multiple Choices\",\r\n    // Details: \"Multiple Choices\"\r\n  },\r\n  \"Status301MovedPermanently\": {\r\n    Code: StatusCode.Status301,\r\n    Message: \"Moved Permanently\",\r\n    // Details: \"Moved Permanently\"\r\n  },\r\n  \"Status302Found\": {\r\n    Code: StatusCode.Status302,\r\n    Message: \"Found\",\r\n    // Details: \"Found\"\r\n  },\r\n  \"Status303SeeOther\": {\r\n    Code: StatusCode.Status303,\r\n    Message: \"See Other\",\r\n    // Details: \"See Other\"\r\n  },\r\n  \"Status304NotModified\": {\r\n    Code: StatusCode.Status304,\r\n    Message: \"Not Modified\",\r\n    // Details: \"Not Modified\"\r\n  },\r\n  \"Status305UseProxy\": {\r\n    Code: StatusCode.Status305,\r\n    Message: \"Use Proxy\",\r\n    // Details: \"Use Proxy\"\r\n  },\r\n  \"Status307TemporaryRedirect\": {\r\n    Code: StatusCode.Status307,\r\n    Message: \"Temporary Redirect\",\r\n    // Details: \"Temporary Redirect\"\r\n  },\r\n  \"Status308PermanentRedirect\": {\r\n    Code: StatusCode.Status308,\r\n    Message: \"Permanent Redirect\",\r\n    // Details: \"Permanent Redirect\"\r\n  },\r\n\r\n  \"Status400BadRequest\": {\r\n    Code: StatusCode.Status400,\r\n    Message: \"Bad Request\",\r\n    // Details: \"Bad Request\"\r\n  },\r\n  \"Status401Unauthorized\": {\r\n    Code: StatusCode.Status401,\r\n    Message: \"Unauthorized\",\r\n    // Details: \"Unauthorized\"\r\n  },\r\n  \"Status402PaymentRequired\": {\r\n    Code: StatusCode.Status402,\r\n    Message: \"Payment Required\",\r\n    // Details: \"Payment Required\"\r\n  },\r\n  \"Status403Forbidden\": {\r\n    Code: StatusCode.Status403,\r\n    Message: \"Forbidden\",\r\n    // Details: \"Forbidden\"\r\n  },\r\n  \"Status404NotFound\": {\r\n    Code: StatusCode.Status404,\r\n    Message: \"Not Found\",\r\n    // Details: \"Not Found\"\r\n  },\r\n  \"Status405MethodNotAllowed\": {\r\n    Code: StatusCode.Status405,\r\n    Message: \"Method Not Allowed\",\r\n    // Details: \"Method Not Allowed\"\r\n  },\r\n  \"Status406NotAcceptable\": {\r\n    Code: StatusCode.Status406,\r\n    Message: \"Not Acceptable\",\r\n    // Details: \"Not Acceptable\"\r\n  },\r\n  \"Status407ProxyAuthenticationRequired\": {\r\n    Code: StatusCode.Status407,\r\n    Message: \"Proxy Authentication Required\",\r\n    // Details: \"Proxy Authentication Required\"\r\n  },\r\n  \"Status408RequestTimeout\": {\r\n    Code: StatusCode.Status408,\r\n    Message: \"Request Timeout\",\r\n    // Details: \"Request Timeout\"\r\n  },\r\n  \"Status409Conflict\": {\r\n    Code: StatusCode.Status409,\r\n    Message: \"Conflict\",\r\n    // Details: \"Conflict\"\r\n  },\r\n  \"Status410Gone\": {\r\n    Code: StatusCode.Status410,\r\n    Message: \"Gone\",\r\n    // Details: \"Gone\"\r\n  },\r\n  \"Status411LengthRequired\": {\r\n    Code: StatusCode.Status411,\r\n    Message: \"Length Required\",\r\n    // Details: \"Length Required\"\r\n  },\r\n  \"Status412PreconditionFailed\": {\r\n    Code: StatusCode.Status412,\r\n    Message: \"Precondition Failed\",\r\n    // Details: \"Precondition Failed\"\r\n  },\r\n  \"Status413PayloadTooLarge\": {\r\n    Code: StatusCode.Status413,\r\n    Message: \"Payload Too Large\",\r\n    // Details: \"Payload Too Large\"\r\n  },\r\n  \"Status414URITooLong\": {\r\n    Code: StatusCode.Status414,\r\n    Message: \"URI Too Long\",\r\n    // Details: \"URI Too Long\"\r\n  },\r\n  \"Status415UnsupportedMediaType\": {\r\n    Code: StatusCode.Status415,\r\n    Message: \"Unsupported Media Type\",\r\n    // Details: \"Unsupported Media Type\"\r\n  },\r\n  \"Status416RangeNotSatisfiable\": {\r\n    Code: StatusCode.Status416,\r\n    Message: \"Range Not Satisfiable\",\r\n    // Details: \"Range Not Satisfiable\"\r\n  },\r\n  \"Status417ExpectationFailed\": {\r\n    Code: StatusCode.Status417,\r\n    Message: \"Expectation Failed\",\r\n    // Details: \"Expectation Failed\"\r\n  },\r\n  \"Status418ImATeapot\": {\r\n    Code: StatusCode.Status418,\r\n    Message: \"I'm a teapot\",\r\n    // Details: \"I'm a teapot\"\r\n  },\r\n  \"Status421MisdirectedRequest\": {\r\n    Code: StatusCode.Status421,\r\n    Message: \"Misdirected Request\",\r\n    // Details: \"Misdirected Request\"\r\n  },\r\n  \"Status422UnprocessableEntity\": {\r\n    Code: StatusCode.Status422,\r\n    Message: \"Unprocessable Entity\",\r\n    // Details: \"Unprocessable Entity\"\r\n  },\r\n  \"Status423Locked\": {\r\n    Code: StatusCode.Status423,\r\n    Message: \"Locked\",\r\n    // Details: \"Locked\"\r\n  },\r\n  \"Status424FailedDependency\": {\r\n    Code: StatusCode.Status424,\r\n    Message: \"Failed Dependency\",\r\n    // Details: \"Failed Dependency\"\r\n  },\r\n  \"Status425Unnassigned\": {\r\n    Code: StatusCode.Status425,\r\n    Message: \"Unassigned\",\r\n    // Details: \"Unassigned\"\r\n  },\r\n  \"Status426UpgradeRequired\": {\r\n    Code: StatusCode.Status426,\r\n    Message: \"Upgrade Required\",\r\n    // Details: \"Upgrade Required\"\r\n  },\r\n  \"Status428PreconditionRequired\": {\r\n    Code: StatusCode.Status428,\r\n    Message: \"Precondition Required\",\r\n    // Details: \"Precondition Required\"\r\n  },\r\n  \"Status429TooManyRequests\": {\r\n    Code: StatusCode.Status429,\r\n    Message: \"Too Many Requests\",\r\n    // Details: \"Too Many Requests\"\r\n  },\r\n  \"Status431RequestHeaderFieldsTooLarge\": {\r\n    Code: StatusCode.Status431,\r\n    Message: \"Request Header Fields Too Large\",\r\n    // Details: \"Request Header Fields Too Large\"\r\n  },\r\n  \"Status451UnavailableForLegalReasons\": {\r\n    Code: StatusCode.Status451,\r\n    Message: \"Unavailable For Legal Reasons\",\r\n    // Details: \"Unavailable For Legal Reasons\"\r\n  },\r\n\r\n  \"Status500InternalServerError\": {\r\n    Code: StatusCode.Status500,\r\n    Message: \"Internal Server Error\",\r\n    // Details: \"Internal Server Error\"\r\n  },\r\n  \"Status501NotImplemented\": {\r\n    Code: StatusCode.Status501,\r\n    Message: \"Not Implemented\",\r\n    // Details: \"Not Implemented\"\r\n  },\r\n  \"Status502BadGateway\": {\r\n    Code: StatusCode.Status502,\r\n    Message: \"Bad Gateway\",\r\n    // Details: \"Bad Gateway\"\r\n  },\r\n  \"Status503ServiceUnavailable\": {\r\n    Code: StatusCode.Status503,\r\n    Message: \"Service Unavailable\",\r\n    // Details: \"Service Unavailable\"\r\n  },\r\n  \"Status504GatewayTimeout\": {\r\n    Code: StatusCode.Status504,\r\n    Message: \"Gateway Timeout\",\r\n    // Details: \"Gateway Timeout\"\r\n  },\r\n  \"Status505HTTPVersionNotSupported\": {\r\n    Code: StatusCode.Status505,\r\n    Message: \"HTTP Version Not Supported\",\r\n    // Details: \"HTTP Version Not Supported\"\r\n  },\r\n  \"Status506VariantAlsoNegotiates\": {\r\n    Code: StatusCode.Status506,\r\n    Message: \"Variant Also Negotiates\",\r\n    // Details: \"Variant Also Negotiates\"\r\n  },\r\n  \"Status507InsufficientStorage\": {\r\n    Code: StatusCode.Status507,\r\n    Message: \"Insufficient Storage\",\r\n    // Details: \"Insufficient Storage\"\r\n  },\r\n  \"Status508LoopDetected\": {\r\n    Code: StatusCode.Status508,\r\n    Message: \"Loop Detected\",\r\n    // Details: \"Loop Detected\"\r\n  },\r\n  \"Status509BandwithLimitExceeded\": {\r\n    Code: StatusCode.Status509,\r\n    Message: \"Bandwith Limit Exceeded\",\r\n    // Details: \"Bandwith Limit Exceeded\"\r\n  },\r\n  \"Status510NotExtended\": {\r\n    Code: StatusCode.Status510,\r\n    Message: \"Not Extended\",\r\n    // Details: \"Not Extended\"\r\n  },\r\n  \"Status511NetworkAuthenticationRequired\": {\r\n    Code: StatusCode.Status511,\r\n    Message: \"Network Authentication Required\",\r\n    // Details: \"Network Authentication Required\"\r\n  },\r\n  \"Status521WebServerIsDown\": {\r\n    Code: StatusCode.Status521,\r\n    Message: \"Web Server Is Down\",\r\n    // Details: \"Web Server Is Down\"\r\n  }\r\n};\r\n","import { BaseErrorInput, BaseInput, BaseSuccessfullInput, GenericClientErrorResponse, GenericInformativeResponse, GenericRedirectionResponse, GenericServerErrorResponse, GenericSuccessfullResponse, IBasicState207, ISource203, ISources301 } from \"./src/interfaces/bases\";\r\nimport { defaultStatesContent, HttpStatus } from \"./src/interfaces/status_codes_defaults\";\r\nimport { StatusCode1xx, StatusCode2xx, StatusCode3xx, StatusCode4xx, StatusCode5xx } from \"./src/interfaces/state_codes\";\r\nimport { Response2xxOpt, Response3xxOpt, Response4xxOpt } from \"./src/methods/options_pattern\"\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (100 Continue | 101 Switching Protocols | 102 Processing | 103 Early Hints)\r\n * @param input \r\n * \r\n */\r\nexport function Response1xxInformative(statusCode: keyof StatusCode1xx, input?: BaseInput): GenericInformativeResponse {\r\n\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case \"100Continue\":\r\n        return defaultStatesContent[\"Status100Continue\"]\r\n      case \"101SwitchingProtocols\":\r\n        return defaultStatesContent[\"Status101SwitchingProtocols\"]\r\n      case \"102Processing\":\r\n        return defaultStatesContent[\"Status102Processing\"]\r\n      case \"103EarlyHints\":\r\n        return defaultStatesContent[\"Status103EarlyHints\"]\r\n      default:\r\n        return defaultStatesContent[\"Status100Continue\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  const response = {\r\n    httpStatus: defaultValues.Code,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource\r\n  }\r\n\r\n  return response\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (200 OK | 201 Created | 202 Accepted | 203 Non-Authoritative Information | 204 No Content | 205 Reset Content | 206 Partial Content | 207 Multi-Status | 208 Already Reported | 226 IM Used)\r\n * @param input \r\n * @param statusOptions  \r\n * @returns \r\n */\r\nexport function Response2xxSuccessful(statusCode: keyof StatusCode2xx, input?: BaseSuccessfullInput, statusOptions?: Response2xxOpt): GenericSuccessfullResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case \"200OK\":\r\n        return defaultStatesContent[\"Status200OK\"]\r\n      case \"201Created\":\r\n        return defaultStatesContent[\"Status201Created\"]\r\n      case \"202Accepted\":\r\n        return defaultStatesContent[\"Status202Accepted\"]\r\n      case \"203NonAuthoritativeInformation\":\r\n        return defaultStatesContent[\"Status203NonAuthoritativeInformation\"]\r\n      // case 204:\r\n      //   return defaultStatesContent[\"Status204NoContent\"]\r\n      case \"205ResetContent\":\r\n        return defaultStatesContent[\"Status205ResetContent\"]\r\n      case \"206PartialContent\":\r\n        return defaultStatesContent[\"Status206PartialContent\"]\r\n      case \"207MultiStatus\":\r\n        return defaultStatesContent[\"Status207MultiStatus\"]\r\n      case \"208AlreadyReported\":\r\n        return defaultStatesContent[\"Status208AlreadyReported\"]\r\n      case \"226IMUsed\":\r\n        return defaultStatesContent[\"Status226IMUsed\"]\r\n      default:\r\n        return defaultStatesContent[\"Status200OK\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  let response: GenericSuccessfullResponse = {\r\n    httpStatus: defaultValues.Code,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    detail: input?.detail || defaultValues.Details,\r\n    data: input?.data,\r\n    consultedResource: input?.consultedResource,\r\n    success: true,\r\n    error: false,\r\n  }\r\n\r\n  statusOptions?.(response)\r\n\r\n  if (statusCode === \"204NoContent\") {\r\n    response = {\r\n      httpStatus: 204,\r\n      error: false,\r\n      success: true,\r\n    }\r\n  }\r\n\r\n  return response\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (300 Multiple Choices | 301 Moved Permanently | 302 Found | 303 See Other | 304 Not Modified | 305 Use Proxy | 307 Temporary Redirect | 308 Permanent Redirect)\r\n * @param input \r\n * @param statusOptions \r\n * @returns \r\n */\r\nexport function Response3xxRedirection(statusCode: keyof StatusCode3xx, input?: BaseInput, statusOptions?: Response3xxOpt): GenericRedirectionResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case \"300MultipleChoices\":\r\n        return defaultStatesContent[\"Status300MultipleChoices\"]\r\n      case \"301MovedPermanently\":\r\n        return defaultStatesContent[\"Status301MovedPermanently\"]\r\n      case \"302Found\":\r\n        return defaultStatesContent[\"Status302Found\"]\r\n      case \"303SeeOther\":\r\n        return defaultStatesContent[\"Status303SeeOther\"]\r\n      case \"304NotModified\":\r\n        return defaultStatesContent[\"Status304NotModified\"]\r\n      case \"305UseProxy\":\r\n        return defaultStatesContent[\"Status305UseProxy\"]\r\n      case \"307TemporaryRedirect\":\r\n        return defaultStatesContent[\"Status307TemporaryRedirect\"]\r\n      case \"308PermanentRedirect\":\r\n        return defaultStatesContent[\"Status308PermanentRedirect\"]\r\n      default:\r\n        return defaultStatesContent[\"Status300MultipleChoices\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  let response: GenericRedirectionResponse = {\r\n    httpStatus: defaultValues.Code,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource,\r\n  }\r\n\r\n  statusOptions?.(response)\r\n\r\n  return response\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (400 Bad Request | 401 Unauthorized | 402 Payment Required | 403 Forbidden | 404 Not Found | 405 Method Not Allowed | 406 Not Acceptable | 407 Proxy Authentication Required | 408 Request Timeout | 409 Conflict | 410 Gone | 411 Length Required | 412 Precondition Failed | 413 Payload Too Large | 414 URI Too Long | 415 Unsupported Media Type | 416 Range Not Satisfiable | 417 Expectation Failed | 418 I'm a teapot | 421 Misdirected Request | 422 Unprocessable Entity | 423 Locked | 424 Failed Dependency | 425 Unnasigned | 426 Upgrade Required | 428 Precondition Required | 429 Too Many Requests | 431 Request Header Fields Too Large | 451 Unavailable For Legal Reasons)\r\n * @param input \r\n * @param statusOptions \r\n * @returns \r\n */\r\nexport function Response4xxClientError(statusCode: keyof StatusCode4xx, input?: BaseErrorInput, statusOptions?: Response4xxOpt): GenericClientErrorResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case \"400BadRequest\":\r\n        return defaultStatesContent[\"Status400BadRequest\"]\r\n      case \"401Unauthorized\":\r\n        return defaultStatesContent[\"Status401Unauthorized\"]\r\n      case \"402PaymentRequired\":\r\n        return defaultStatesContent[\"Status402PaymentRequired\"]\r\n      case \"403Forbidden\":\r\n        return defaultStatesContent[\"Status403Forbidden\"]\r\n      case \"404NotFound\":\r\n        return defaultStatesContent[\"Status404NotFound\"]\r\n      case \"405MethodNotAllowed\":\r\n        return defaultStatesContent[\"Status405MethodNotAllowed\"]\r\n      case \"406NotAcceptable\":\r\n        return defaultStatesContent[\"Status406NotAcceptable\"]\r\n      case \"407ProxyAuthenticationRequired\":\r\n        return defaultStatesContent[\"Status407ProxyAuthenticationRequired\"]\r\n      case \"408RequestTimeout\":\r\n        return defaultStatesContent[\"Status408RequestTimeout\"]\r\n      case \"409Conflict\":\r\n        return defaultStatesContent[\"Status409Conflict\"]\r\n      case \"410Gone\":\r\n        return defaultStatesContent[\"Status410Gone\"]\r\n      case \"411LengthRequired\":\r\n        return defaultStatesContent[\"Status411LengthRequired\"]\r\n      case \"412PreconditionFailed\":\r\n        return defaultStatesContent[\"Status412PreconditionFailed\"]\r\n      case \"413PayloadTooLarge\":\r\n        return defaultStatesContent[\"Status413PayloadTooLarge\"]\r\n      case \"414URITooLong\":\r\n        return defaultStatesContent[\"Status414URITooLong\"]\r\n      case \"415UnsupportedMediaType\":\r\n        return defaultStatesContent[\"Status415UnsupportedMediaType\"]\r\n      case \"416RangeNotSatisfiable\":\r\n        return defaultStatesContent[\"Status416RangeNotSatisfiable\"]\r\n      case \"417ExpectationFailed\":\r\n        return defaultStatesContent[\"Status417ExpectationFailed\"]\r\n      case \"418ImATeapot\":\r\n        return defaultStatesContent[\"Status418ImATeapot\"]\r\n      case \"421MisdirectedRequest\":\r\n        return defaultStatesContent[\"Status421MisdirectedRequest\"]\r\n      case \"422UnprocessableEntity\":\r\n        return defaultStatesContent[\"Status422UnprocessableEntity\"]\r\n      case \"423Locked\":\r\n        return defaultStatesContent[\"Status423Locked\"]\r\n      case \"424FailedDependency\":\r\n        return defaultStatesContent[\"Status424FailedDependency\"]\r\n      case \"425TooEarly\":\r\n        return defaultStatesContent[\"Status425TooEarly\"]\r\n      case \"426UpgradeRequired\":\r\n        return defaultStatesContent[\"Status426UpgradeRequired\"]\r\n      case \"428PreconditionRequired\":\r\n        return defaultStatesContent[\"Status428PreconditionRequired\"]\r\n      case \"429TooManyRequests\":\r\n        return defaultStatesContent[\"Status429TooManyRequests\"]\r\n      case \"431RequestHeaderFieldsTooLarge\":\r\n        return defaultStatesContent[\"Status431RequestHeaderFieldsTooLarge\"]\r\n      case \"451UnavailableForLegalReasons\":\r\n        return defaultStatesContent[\"Status451UnavailableForLegalReasons\"]\r\n      default:\r\n        return defaultStatesContent[\"Status400BadRequest\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  let response: GenericClientErrorResponse = {\r\n    httpStatus: defaultValues.Code,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    // detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource,\r\n\r\n    errors: input?.errors,\r\n    errorCode: input?.errorCode,\r\n    errorDescription: input?.errorDescription,\r\n    errorName: input?.errorName,\r\n\r\n    errorDetails: {},\r\n\r\n    error: true,\r\n    success: false\r\n  }\r\n\r\n  statusOptions?.(response)\r\n\r\n  return response\r\n\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (500 Internal Server Error | 501 Not Implemented | 502 Bad Gateway | 503 Service Unavailable | 504 Gateway Timeout | 505 HTTP Version Not Supported | 506 Variant Also Negotiates | 507 Insufficient Storage | 508 Loop Detected | 509 Bandwidth Limit Exceeded | 510 Not Extended | 511 Network Authentication Required | 521 Web Server Is Down)\r\n * @param input \r\n * @returns \r\n */\r\nexport function Response5xxServerError(statusCode: keyof StatusCode5xx, input?: BaseErrorInput): GenericServerErrorResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case \"500InternalServerError\":\r\n        return defaultStatesContent[\"Status500InternalServerError\"]\r\n      case \"501NotImplemented\":\r\n        return defaultStatesContent[\"Status501NotImplemented\"]\r\n      case \"502BadGateway\":\r\n        return defaultStatesContent[\"Status502BadGateway\"]\r\n      case \"503ServiceUnavailable\":\r\n        return defaultStatesContent[\"Status503ServiceUnavailable\"]\r\n      case \"504GatewayTimeout\":\r\n        return defaultStatesContent[\"Status504GatewayTimeout\"]\r\n      case \"505HTTPVersionNotSupported\":\r\n        return defaultStatesContent[\"Status505HTTPVersionNotSupported\"]\r\n      case \"506VariantAlsoNegotiates\":\r\n        return defaultStatesContent[\"Status506VariantAlsoNegotiates\"]\r\n      case \"507InsufficientStorage\":\r\n        return defaultStatesContent[\"Status507InsufficientStorage\"]\r\n      case \"508LoopDetected\":\r\n        return defaultStatesContent[\"Status508LoopDetected\"]\r\n      case \"509BandwidthLimitExceeded\":\r\n        return defaultStatesContent[\"Status509BandwidthLimitExceeded\"]\r\n      case \"510NotExtended\":\r\n        return defaultStatesContent[\"Status510NotExtended\"]\r\n      case \"511NetworkAuthenticationRequired\":\r\n        return defaultStatesContent[\"Status511NetworkAuthenticationRequired\"]\r\n      case \"521ConnectionTimedOut\":\r\n        return defaultStatesContent[\"Status521WebServerIsDown\"]\r\n      default:\r\n        return defaultStatesContent[\"Status500InternalServerError\"]\r\n    }\r\n  }\r\n\r\n  let response: GenericServerErrorResponse = {\r\n    httpStatus: defaultValuesSelector().Code,\r\n    serverMessage: input?.serverMessage || defaultValuesSelector().Message,\r\n    detail: input?.detail || defaultValuesSelector().Details,\r\n    consultedResource: input?.consultedResource,\r\n\r\n    errors: input?.errors,\r\n    errorCode: input?.errorCode,\r\n    errorDescription: input?.errorDescription,\r\n    errorName: input?.errorName,\r\n\r\n    error: true,\r\n    success: false\r\n  }\r\n\r\n  return response\r\n}\r\n\r\n\r\n\r\n\r\nexport class StatusOptions {\r\n  // 200s\r\n  /**\r\n   * \r\n   * @param location Location of the resource created\r\n   * @example location: \"https://example.com/api/v1/users/1\"\r\n   */\r\n  static Status201Opt(location: string): Response2xxOpt {\r\n    return function (props: GenericSuccessfullResponse) {\r\n      return props.location = location\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param requestId Request ID of the request that will be processed\r\n   * @example requestId: \"1234567890\"\r\n   */\r\n  static Status202Opt(requestId: string): Response2xxOpt {\r\n    return function (props: GenericSuccessfullResponse) {\r\n      return props.requestId = requestId\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param source Source of the response\r\n   * @example source: { name: \"Example\", description: \"Example of source\", url: \"https://example.com\" }\r\n   */\r\n  static Status203Opt(source: ISource203): Response2xxOpt {\r\n    return function (props: GenericSuccessfullResponse) {\r\n      return props.source = source\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param states Array of states\r\n   * @example states: [{ httpStatus: 200, serverMessage: \"OK\", detail: \"Everything is OK\" }, { httpStatus: 201, serverMessage: \"Created\", detail: \"Resource created\" }]\r\n   */\r\n  static Status207Opt(states: IBasicState207[]): Response2xxOpt {\r\n    return function (props: GenericSuccessfullResponse) {\r\n      return props.states = states\r\n    }\r\n  }\r\n\r\n  // 300s\r\n\r\n  /**\r\n   * \r\n   * @param options Array of options\r\n   * @example options: [{ name: \"Option 1\", description: \"Description of option 1\" }, { name: \"Option 2\", description: \"Description of option 2\" }]\r\n   */\r\n  static Status300Opt(options: any[]): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.options = options\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param sources Object with the old and new source\r\n   * @example sources: { oldSource: \"https://example.com/api/v1/users\", newSource: \"https://example.com/api/v2/users\" }\r\n   */\r\n  static Status301Opt(sources: ISources301): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.sources = sources\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param redirectUrl URL to which the client should be redirected\r\n   * @example redirectUrl: \"https://example.com/api/v1/users\"\r\n   */\r\n  static Status302Opt(redirectUrl: string): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.redirectUrl = redirectUrl\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param redirectUrl URL to which the client should be redirected\r\n   * @example redirectUrl: \"https://example.com/api/v1/users\"\r\n   */\r\n  static Status303Opt(redirectUrl: string): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.redirectUrl = redirectUrl\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param proxyUrl URL of the proxy server\r\n   * @example proxyUrl: \"https://example.com/api/v1/users\"\r\n   */\r\n  static Status305Opt(proxyUrl: string): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.proxyUrl = proxyUrl\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param redirectUrl URL to which the client should be redirected\r\n   * @example redirectUrl: \"https://example.com/api/v1/users\"\r\n   */\r\n  static Status307Opt(redirectUrl: string): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.redirectUrl = redirectUrl\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param redirectUrl URL to which the client should be redirected\r\n   * @example redirectUrl: \"https://example.com/api/v1/users\"\r\n   */\r\n  static Status308Opt(redirectUrl: string): Response3xxOpt {\r\n    return function (props: GenericRedirectionResponse) {\r\n      return props.redirectUrl = redirectUrl\r\n    }\r\n  }\r\n\r\n  // 400s\r\n\r\n  /**\r\n   * \r\n   * @param notFoundResource Resource that was not found\r\n   * @example notFoundResource: \"https://example.com/api/v1/users/1\"\r\n   */\r\n  static Status404Opt(notFoundResource: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.notFoundResource = notFoundResource\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param allowedMethods Array of allowed methods\r\n   * @example allowedMethods: [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\r\n   */\r\n  static Status405Opt(allowedMethods: string[]): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.allowedMethods = allowedMethods\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param allowedRepresentations Array of allowed representations\r\n   * @example allowedRepresentations: [\"application/json\", \"application/xml\"]\r\n   */\r\n  static Status406Opt(allowedRepresentations: string[]): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.allowedRepresentations = allowedRepresentations\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param authenticationType Type of authentication\r\n   * @param realm Realm or domain of authentication\r\n   * @example authenticationType: \"Basic\", realm: \"Example\"\r\n   */\r\n  static Status407Opt(authenticationType: string, realm: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.authenticationType = authenticationType, props.errorDetails!.realm = realm\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param timeWaiting Time in seconds to wait before retrying\r\n   * @example timeWaiting: \"60s\"\r\n   */\r\n  static Status408Opt(timeWaiting: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.timeWaiting = timeWaiting\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param conflictResource Resource that caused the conflict\r\n   * @param conflictId ID of the conflict\r\n   * @example conflictResource: \"https://example.com/api/v1/users/1\", conflictId: \"1\"\r\n   */\r\n  static Status409Opt(conflictResource: string, conflictId: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.conflictResource = conflictResource, props.errorDetails!.conflictId = conflictId\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param goneResource Resource that is no longer available\r\n   * @param reason Reason why the resource is no longer available\r\n   * @example goneResource: \"https://example.com/api/v1/users/1\", reason: \"User was deleted\"\r\n   */\r\n  static Status410Opt(goneResource: string, reason: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.goneResource = goneResource, props.errorDetails!.reason = reason\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns Required header\r\n   */\r\n  static Status411Opt(): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.requiredHeader = \"Content-Length\"\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param maxAllowedSize Maximum allowed size\r\n   * @example maxAllowedSize: \"1MB\"\r\n   */\r\n  static Status413Opt(maxAllowedSize: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.maxAllowedSize = maxAllowedSize\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param maxAllowedLength Maximum allowed length\r\n   * @example maxAllowedLength: \"1000\"\r\n   */\r\n  static Status414Opt(maxAllowedLength: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.maxAllowedLength = maxAllowedLength\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param supportedMediaTypes Array of supported media types\r\n   * @example supportedMediaTypes: [\"application/json\", \"application/xml\"]\r\n   */\r\n  static Status415Opt(supportedMediaTypes: string[]): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.supportedMediaTypes = supportedMediaTypes\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param requestedContentRange  Content range requested by the client\r\n   * @param supportedContentRange  Content range supported by the server\r\n   * @example requestedContentRange: \"bytes=0-100\", supportedContentRange: \"bytes=0-1000\"\r\n   */\r\n  static Status416Opt(requestedContentRange: string, supportedContentRange: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.requestedContentRange = requestedContentRange, props.errorDetails!.supportedContentRange = supportedContentRange\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param lockedResource Resource that is locked\r\n   * @example lockedResource: \"https://example.com/api/v1/users/1\"\r\n   */\r\n  static Status423Opt(lockedResource: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.lockedResource = lockedResource\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param failedDependency Resource that failed to be processed\r\n   * @example failedDependency: \"https://example.com/api/v1/users/1\"\r\n   */\r\n  static Status424Opt(failedDependency: string): Response4xxOpt {\r\n    return function (props: GenericClientErrorResponse) {\r\n      return props.errorDetails.failedDependency = failedDependency\r\n    }\r\n  }\r\n}"],"names":["StatusCode","Status100Continue","Code","Status100","Message","Details","Status101SwitchingProtocols","Status101","Status102Processing","Status102","Status103EarlyHints","Status103","Status200OK","Status200","Status201Created","Status201","Status202Accepted","Status202","Status203NonAuthoritativeInformation","Status203","Status205ResetContent","Status205","Status206PartialContent","Status206","Status207MultiStatus","Status207","Status208AlreadyReported","Status208","Status226IMUsed","Status226","Status300MultipleChoices","Status300","Status301MovedPermanently","Status301","Status302Found","Status302","Status303SeeOther","Status303","Status304NotModified","Status304","Status305UseProxy","Status305","Status307TemporaryRedirect","Status307","Status308PermanentRedirect","Status308","Status400BadRequest","Status400","Status401Unauthorized","Status401","Status402PaymentRequired","Status402","Status403Forbidden","Status403","Status404NotFound","Status404","Status405MethodNotAllowed","Status405","Status406NotAcceptable","Status406","Status407ProxyAuthenticationRequired","Status407","Status408RequestTimeout","Status408","Status409Conflict","Status409","Status410Gone","Status410","Status411LengthRequired","Status411","Status412PreconditionFailed","Status412","Status413PayloadTooLarge","Status413","Status414URITooLong","Status414","Status415UnsupportedMediaType","Status415","Status416RangeNotSatisfiable","Status416","Status417ExpectationFailed","Status417","Status418ImATeapot","Status418","Status421MisdirectedRequest","Status421","Status422UnprocessableEntity","Status422","Status423Locked","Status423","Status424FailedDependency","Status424","Status425Unnassigned","Status425","Status426UpgradeRequired","Status426","Status428PreconditionRequired","Status428","Status429TooManyRequests","Status429","Status431RequestHeaderFieldsTooLarge","Status431","Status451UnavailableForLegalReasons","Status451","Status500InternalServerError","Status500","Status501NotImplemented","Status501","Status502BadGateway","Status502","Status503ServiceUnavailable","Status503","Status504GatewayTimeout","Status504","Status505HTTPVersionNotSupported","Status505","Status506VariantAlsoNegotiates","Status506","Status507InsufficientStorage","Status507","Status508LoopDetected","Status508","Status509BandwithLimitExceeded","Status509","Status510NotExtended","Status510","Status511NetworkAuthenticationRequired","Status511","Status521WebServerIsDown","Status521","StatusOptions","Status201Opt","location","props","Status202Opt","requestId","Status203Opt","source","Status207Opt","states","Status300Opt","options","Status301Opt","sources","Status302Opt","redirectUrl","Status303Opt","Status305Opt","proxyUrl","Status307Opt","Status308Opt","Status404Opt","notFoundResource","errorDetails","Status405Opt","allowedMethods","Status406Opt","allowedRepresentations","Status407Opt","authenticationType","realm","Status408Opt","timeWaiting","Status409Opt","conflictResource","conflictId","Status410Opt","goneResource","reason","Status411Opt","requiredHeader","Status413Opt","maxAllowedSize","Status414Opt","maxAllowedLength","Status415Opt","supportedMediaTypes","Status416Opt","requestedContentRange","supportedContentRange","Status423Opt","lockedResource","Status424Opt","failedDependency","Response1xxInformative","statusCode","input","defaultValues","defaultStatesContent","defaultValuesSelector","httpStatus","serverMessage","detail","consultedResource","statusOptions","response","data","success","error","Response4xxClientError","errors","errorCode","errorDescription","errorName"],"mappings":"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"}