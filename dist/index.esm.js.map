{"version":3,"file":"index.esm.js","sources":["../src/interfaces/status_codes_defaults.ts","../index.ts"],"sourcesContent":["export interface HttpStatus {\r\n  Code: StatusCode;\r\n  Message: string;\r\n  Details?: string;\r\n}\r\n\r\n\r\n\r\nenum StatusCode {\r\n  Status100 = 100,\r\n  Status101 = 101,\r\n  Status102 = 102,\r\n  Status103 = 103,\r\n\r\n  Status200 = 200,\r\n  Status201 = 201,\r\n  Status202 = 202,\r\n  Status203 = 203,\r\n  Status204 = 204,\r\n  Status205 = 205,\r\n  Status206 = 206,\r\n  Status207 = 207,\r\n  Status208 = 208,\r\n  Status226 = 226,\r\n\r\n  Status300 = 300,\r\n  Status301 = 301,\r\n  Status302 = 302,\r\n  Status303 = 303,\r\n  Status304 = 304,\r\n  Status305 = 305,\r\n  Status307 = 307,\r\n  Status308 = 308,\r\n\r\n  Status400 = 400,\r\n  Status401 = 401,\r\n  Status402 = 402,\r\n  Status403 = 403,\r\n  Status404 = 404,\r\n  Status405 = 405,\r\n  Status406 = 406,\r\n  Status407 = 407,\r\n  Status408 = 408,\r\n  Status409 = 409,\r\n  Status410 = 410,\r\n  Status411 = 411,\r\n  Status412 = 412,\r\n  Status413 = 413,\r\n  Status414 = 414,\r\n  Status415 = 415,\r\n  Status416 = 416,\r\n  Status417 = 417,\r\n  Status418 = 418,\r\n  Status421 = 421,\r\n  Status422 = 422,\r\n  Status423 = 423,\r\n  Status424 = 424,\r\n  Status425 = 425,\r\n  Status426 = 426,\r\n  Status428 = 428,\r\n  Status429 = 429,\r\n  Status431 = 431,\r\n  Status451 = 451,\r\n\r\n  Status500 = 500,\r\n  Status501 = 501,\r\n  Status502 = 502,\r\n  Status503 = 503,\r\n  Status504 = 504,\r\n  Status505 = 505,\r\n  Status506 = 506,\r\n  Status507 = 507,\r\n  Status508 = 508,\r\n  Status509 = 509,\r\n  Status510 = 510,\r\n  Status511 = 511,\r\n  Status521 = 521,\r\n}\r\n\r\ninterface IDefaultStateContent {\r\n  [key: string]: HttpStatus;\r\n}\r\n\r\nexport const defaultStatesContent: IDefaultStateContent = {\r\n  \"Status100Continue\": {\r\n    Code: StatusCode.Status100,\r\n    Message: \"Continue\",\r\n    Details:\r\n      \"Continue with the request\",\r\n  },\r\n  \"Status101SwitchingProtocols\": {\r\n    Code: StatusCode.Status101,\r\n    Message: \"Switching Protocols\",\r\n    // Details: \"\"\r\n  },\r\n  \"Status102Processing\": {\r\n    Code: StatusCode.Status102,\r\n    Message: \"Processing\",\r\n    // Details: \"\"\r\n  },\r\n  \"Status103EarlyHints\": {\r\n    Code: StatusCode.Status103,\r\n    Message: \"Checkpoint\",\r\n    // Details: \"\"\r\n  },\r\n\r\n  \"Status200OK\": {\r\n    Code: StatusCode.Status200,\r\n    Message: \"OK\",\r\n    Details: \"The request has been successfully processed\"\r\n  },\r\n  \"Status201Created\": {\r\n    Code: StatusCode.Status201,\r\n    Message: \"Created\",\r\n    Details: \"Resource successfully created\"\r\n  },\r\n  \"Status202Accepted\": {\r\n    Code: StatusCode.Status202,\r\n    Message: \"Accepted\",\r\n    Details: \"The request has been accepted for processing\"\r\n  },\r\n  \"Status203NonAuthoritativeInformation\": {\r\n    Code: StatusCode.Status203,\r\n    Message: \"Non-Authoritative Information\",\r\n    Details: \"Non-Authoritative Information returned\"\r\n  },\r\n  // \"Status204NoContent\": {\r\n  //   Code: StatusCode.Status204,\r\n  //   Message: \"No Content\",\r\n  //   Details: \"The request has been successfully processed, but no content is returned\"\r\n  // },\r\n  \"Status205ResetContent\": {\r\n    Code: StatusCode.Status205,\r\n    Message: \"Reset Content\",\r\n    Details: \"The request has been successfully processed, but no content is returned\"\r\n  },\r\n  \"Status206PartialContent\": {\r\n    Code: StatusCode.Status206,\r\n    Message: \"Partial Content\",\r\n    Details: \"Partial Content returned\"\r\n  },\r\n  \"Status207MultiStatus\": {\r\n    Code: StatusCode.Status207,\r\n    Message: \"Multi-Status\",\r\n    Details: \"Multi-Status returned\"\r\n  },\r\n  \"Status208AlreadyReported\": {\r\n    Code: StatusCode.Status208,\r\n    Message: \"Already Reported\",\r\n    Details: \"Resource already reported\"\r\n  },\r\n  \"Status226IMUsed\": {\r\n    Code: StatusCode.Status226,\r\n    Message: \"IM Used\",\r\n    Details: \"IM Used\"\r\n  },\r\n\r\n  \"Status300MultipleChoices\": {\r\n    Code: StatusCode.Status300,\r\n    Message: \"Multiple Choices\",\r\n    // Details: \"Multiple Choices\"\r\n  },\r\n  \"Status301MovedPermanently\": {\r\n    Code: StatusCode.Status301,\r\n    Message: \"Moved Permanently\",\r\n    // Details: \"Moved Permanently\"\r\n  },\r\n  \"Status302Found\": {\r\n    Code: StatusCode.Status302,\r\n    Message: \"Found\",\r\n    // Details: \"Found\"\r\n  },\r\n  \"Status303SeeOther\": {\r\n    Code: StatusCode.Status303,\r\n    Message: \"See Other\",\r\n    // Details: \"See Other\"\r\n  },\r\n  \"Status304NotModified\": {\r\n    Code: StatusCode.Status304,\r\n    Message: \"Not Modified\",\r\n    // Details: \"Not Modified\"\r\n  },\r\n  \"Status305UseProxy\": {\r\n    Code: StatusCode.Status305,\r\n    Message: \"Use Proxy\",\r\n    // Details: \"Use Proxy\"\r\n  },\r\n  \"Status307TemporaryRedirect\": {\r\n    Code: StatusCode.Status307,\r\n    Message: \"Temporary Redirect\",\r\n    // Details: \"Temporary Redirect\"\r\n  },\r\n  \"Status308PermanentRedirect\": {\r\n    Code: StatusCode.Status308,\r\n    Message: \"Permanent Redirect\",\r\n    // Details: \"Permanent Redirect\"\r\n  },\r\n\r\n  \"Status400BadRequest\": {\r\n    Code: StatusCode.Status400,\r\n    Message: \"Bad Request\",\r\n    // Details: \"Bad Request\"\r\n  },\r\n  \"Status401Unauthorized\": {\r\n    Code: StatusCode.Status401,\r\n    Message: \"Unauthorized\",\r\n    // Details: \"Unauthorized\"\r\n  },\r\n  \"Status402PaymentRequired\": {\r\n    Code: StatusCode.Status402,\r\n    Message: \"Payment Required\",\r\n    // Details: \"Payment Required\"\r\n  },\r\n  \"Status403Forbidden\": {\r\n    Code: StatusCode.Status403,\r\n    Message: \"Forbidden\",\r\n    // Details: \"Forbidden\"\r\n  },\r\n  \"Status404NotFound\": {\r\n    Code: StatusCode.Status404,\r\n    Message: \"Not Found\",\r\n    // Details: \"Not Found\"\r\n  },\r\n  \"Status405MethodNotAllowed\": {\r\n    Code: StatusCode.Status405,\r\n    Message: \"Method Not Allowed\",\r\n    // Details: \"Method Not Allowed\"\r\n  },\r\n  \"Status406NotAcceptable\": {\r\n    Code: StatusCode.Status406,\r\n    Message: \"Not Acceptable\",\r\n    // Details: \"Not Acceptable\"\r\n  },\r\n  \"Status407ProxyAuthenticationRequired\": {\r\n    Code: StatusCode.Status407,\r\n    Message: \"Proxy Authentication Required\",\r\n    // Details: \"Proxy Authentication Required\"\r\n  },\r\n  \"Status408RequestTimeout\": {\r\n    Code: StatusCode.Status408,\r\n    Message: \"Request Timeout\",\r\n    // Details: \"Request Timeout\"\r\n  },\r\n  \"Status409Conflict\": {\r\n    Code: StatusCode.Status409,\r\n    Message: \"Conflict\",\r\n    // Details: \"Conflict\"\r\n  },\r\n  \"Status410Gone\": {\r\n    Code: StatusCode.Status410,\r\n    Message: \"Gone\",\r\n    // Details: \"Gone\"\r\n  },\r\n  \"Status411LengthRequired\": {\r\n    Code: StatusCode.Status411,\r\n    Message: \"Length Required\",\r\n    // Details: \"Length Required\"\r\n  },\r\n  \"Status412PreconditionFailed\": {\r\n    Code: StatusCode.Status412,\r\n    Message: \"Precondition Failed\",\r\n    // Details: \"Precondition Failed\"\r\n  },\r\n  \"Status413PayloadTooLarge\": {\r\n    Code: StatusCode.Status413,\r\n    Message: \"Payload Too Large\",\r\n    // Details: \"Payload Too Large\"\r\n  },\r\n  \"Status414URITooLong\": {\r\n    Code: StatusCode.Status414,\r\n    Message: \"URI Too Long\",\r\n    // Details: \"URI Too Long\"\r\n  },\r\n  \"Status415UnsupportedMediaType\": {\r\n    Code: StatusCode.Status415,\r\n    Message: \"Unsupported Media Type\",\r\n    // Details: \"Unsupported Media Type\"\r\n  },\r\n  \"Status416RangeNotSatisfiable\": {\r\n    Code: StatusCode.Status416,\r\n    Message: \"Range Not Satisfiable\",\r\n    // Details: \"Range Not Satisfiable\"\r\n  },\r\n  \"Status417ExpectationFailed\": {\r\n    Code: StatusCode.Status417,\r\n    Message: \"Expectation Failed\",\r\n    // Details: \"Expectation Failed\"\r\n  },\r\n  \"Status418ImATeapot\": {\r\n    Code: StatusCode.Status418,\r\n    Message: \"I'm a teapot\",\r\n    // Details: \"I'm a teapot\"\r\n  },\r\n  \"Status421MisdirectedRequest\": {\r\n    Code: StatusCode.Status421,\r\n    Message: \"Misdirected Request\",\r\n    // Details: \"Misdirected Request\"\r\n  },\r\n  \"Status422UnprocessableEntity\": {\r\n    Code: StatusCode.Status422,\r\n    Message: \"Unprocessable Entity\",\r\n    // Details: \"Unprocessable Entity\"\r\n  },\r\n  \"Status423Locked\": {\r\n    Code: StatusCode.Status423,\r\n    Message: \"Locked\",\r\n    // Details: \"Locked\"\r\n  },\r\n  \"Status424FailedDependency\": {\r\n    Code: StatusCode.Status424,\r\n    Message: \"Failed Dependency\",\r\n    // Details: \"Failed Dependency\"\r\n  },\r\n  \"Status425Unnassigned\": {\r\n    Code: StatusCode.Status425,\r\n    Message: \"Unassigned\",\r\n    // Details: \"Unassigned\"\r\n  },\r\n  \"Status426UpgradeRequired\": {\r\n    Code: StatusCode.Status426,\r\n    Message: \"Upgrade Required\",\r\n    // Details: \"Upgrade Required\"\r\n  },\r\n  \"Status428PreconditionRequired\": {\r\n    Code: StatusCode.Status428,\r\n    Message: \"Precondition Required\",\r\n    // Details: \"Precondition Required\"\r\n  },\r\n  \"Status429TooManyRequests\": {\r\n    Code: StatusCode.Status429,\r\n    Message: \"Too Many Requests\",\r\n    // Details: \"Too Many Requests\"\r\n  },\r\n  \"Status431RequestHeaderFieldsTooLarge\": {\r\n    Code: StatusCode.Status431,\r\n    Message: \"Request Header Fields Too Large\",\r\n    // Details: \"Request Header Fields Too Large\"\r\n  },\r\n  \"Status451UnavailableForLegalReasons\": {\r\n    Code: StatusCode.Status451,\r\n    Message: \"Unavailable For Legal Reasons\",\r\n    // Details: \"Unavailable For Legal Reasons\"\r\n  },\r\n\r\n  \"Status500InternalServerError\": {\r\n    Code: StatusCode.Status500,\r\n    Message: \"Internal Server Error\",\r\n    // Details: \"Internal Server Error\"\r\n  },\r\n  \"Status501NotImplemented\": {\r\n    Code: StatusCode.Status501,\r\n    Message: \"Not Implemented\",\r\n    // Details: \"Not Implemented\"\r\n  },\r\n  \"Status502BadGateway\": {\r\n    Code: StatusCode.Status502,\r\n    Message: \"Bad Gateway\",\r\n    // Details: \"Bad Gateway\"\r\n  },\r\n  \"Status503ServiceUnavailable\": {\r\n    Code: StatusCode.Status503,\r\n    Message: \"Service Unavailable\",\r\n    // Details: \"Service Unavailable\"\r\n  },\r\n  \"Status504GatewayTimeout\": {\r\n    Code: StatusCode.Status504,\r\n    Message: \"Gateway Timeout\",\r\n    // Details: \"Gateway Timeout\"\r\n  },\r\n  \"Status505HTTPVersionNotSupported\": {\r\n    Code: StatusCode.Status505,\r\n    Message: \"HTTP Version Not Supported\",\r\n    // Details: \"HTTP Version Not Supported\"\r\n  },\r\n  \"Status506VariantAlsoNegotiates\": {\r\n    Code: StatusCode.Status506,\r\n    Message: \"Variant Also Negotiates\",\r\n    // Details: \"Variant Also Negotiates\"\r\n  },\r\n  \"Status507InsufficientStorage\": {\r\n    Code: StatusCode.Status507,\r\n    Message: \"Insufficient Storage\",\r\n    // Details: \"Insufficient Storage\"\r\n  },\r\n  \"Status508LoopDetected\": {\r\n    Code: StatusCode.Status508,\r\n    Message: \"Loop Detected\",\r\n    // Details: \"Loop Detected\"\r\n  },\r\n  \"Status509BandwithLimitExceeded\": {\r\n    Code: StatusCode.Status509,\r\n    Message: \"Bandwith Limit Exceeded\",\r\n    // Details: \"Bandwith Limit Exceeded\"\r\n  },\r\n  \"Status510NotExtended\": {\r\n    Code: StatusCode.Status510,\r\n    Message: \"Not Extended\",\r\n    // Details: \"Not Extended\"\r\n  },\r\n  \"Status511NetworkAuthenticationRequired\": {\r\n    Code: StatusCode.Status511,\r\n    Message: \"Network Authentication Required\",\r\n    // Details: \"Network Authentication Required\"\r\n  },\r\n  \"Status521WebServerIsDown\": {\r\n    Code: StatusCode.Status521,\r\n    Message: \"Web Server Is Down\",\r\n    // Details: \"Web Server Is Down\"\r\n  }\r\n};\r\n","import { BaseErrorInput, BaseInput, BaseSuccessfullInput, GenericClientErrorResponse, GenericInformativeResponse, GenericRedirectionResponse, GenericServerErrorResponse, GenericSuccessfullResponse } from \"./src/interfaces/bases\";\r\nimport { defaultStatesContent, HttpStatus } from \"./src/interfaces/status_codes_defaults\";\r\nimport { StatusCode1xx, StatusCode2xx, StatusCode3xx, StatusCode4xx, StatusCode5xx } from \"./src/interfaces/state_codes\";\r\nimport { Response2xxOpt, Response3xxOpt, Response4xxOpt } from \"./src/methods/options_pattern\"\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (100 Continue | 101 Switching Protocols | 102 Processing | 103 Early Hints)\r\n * @param input \r\n * \r\n */\r\nexport function Response1xxInformative(statusCode: StatusCode1xx, input?: BaseInput): GenericInformativeResponse {\r\n\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case 100:\r\n        return defaultStatesContent[\"Status100Continue\"]\r\n      case 101:\r\n        return defaultStatesContent[\"Status101SwitchingProtocols\"]\r\n      case 102:\r\n        return defaultStatesContent[\"Status102Processing\"]\r\n      case 103:\r\n        return defaultStatesContent[\"Status103EarlyHints\"]\r\n      default:\r\n        return defaultStatesContent[\"Status100Continue\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  const response = {\r\n    httpStatus: statusCode,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource\r\n  }\r\n\r\n  return response\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (200 OK | 201 Created | 202 Accepted | 203 Non-Authoritative Information | 204 No Content | 205 Reset Content | 206 Partial Content | 207 Multi-Status | 208 Already Reported | 226 IM Used)\r\n * @param input \r\n * @param statusOptions  \r\n * @returns \r\n */\r\nexport function Response2xxSuccessful(statusCode: StatusCode2xx, input?: BaseSuccessfullInput, statusOptions?: Response2xxOpt): GenericSuccessfullResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case 200:\r\n        return defaultStatesContent[\"Status200OK\"]\r\n      case 201:\r\n        return defaultStatesContent[\"Status201Created\"]\r\n      case 202:\r\n        return defaultStatesContent[\"Status202Accepted\"]\r\n      case 203:\r\n        return defaultStatesContent[\"Status203NonAuthoritativeInformation\"]\r\n      // case 204:\r\n      //   return defaultStatesContent[\"Status204NoContent\"]\r\n      case 205:\r\n        return defaultStatesContent[\"Status205ResetContent\"]\r\n      case 206:\r\n        return defaultStatesContent[\"Status206PartialContent\"]\r\n      case 207:\r\n        return defaultStatesContent[\"Status207MultiStatus\"]\r\n      case 208:\r\n        return defaultStatesContent[\"Status208AlreadyReported\"]\r\n      case 226:\r\n        return defaultStatesContent[\"Status226IMUsed\"]\r\n      default:\r\n        return defaultStatesContent[\"Status200OK\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  let response: GenericSuccessfullResponse = {\r\n    httpStatus: statusCode,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource,\r\n    success: true,\r\n    error: false,\r\n  }\r\n\r\n  statusOptions?.(response)\r\n\r\n  if (statusCode === 204) {\r\n    response = {\r\n      httpStatus: 204,\r\n      error: false,\r\n      success: true,\r\n    }\r\n  }\r\n\r\n  return response\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (300 Multiple Choices | 301 Moved Permanently | 302 Found | 303 See Other | 304 Not Modified | 305 Use Proxy | 307 Temporary Redirect | 308 Permanent Redirect)\r\n * @param input \r\n * @param statusOptions \r\n * @returns \r\n */\r\nexport function Response3xxRedirection(statusCode: StatusCode3xx, input?: BaseInput, statusOptions?: Response3xxOpt): GenericRedirectionResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case 300:\r\n        return defaultStatesContent[\"Status300MultipleChoices\"]\r\n      case 301:\r\n        return defaultStatesContent[\"Status301MovedPermanently\"]\r\n      case 302:\r\n        return defaultStatesContent[\"Status302Found\"]\r\n      case 303:\r\n        return defaultStatesContent[\"Status303SeeOther\"]\r\n      case 304:\r\n        return defaultStatesContent[\"Status304NotModified\"]\r\n      case 305:\r\n        return defaultStatesContent[\"Status305UseProxy\"]\r\n      case 307:\r\n        return defaultStatesContent[\"Status307TemporaryRedirect\"]\r\n      case 308:\r\n        return defaultStatesContent[\"Status308PermanentRedirect\"]\r\n      default:\r\n        return defaultStatesContent[\"Status300MultipleChoices\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  let response: GenericRedirectionResponse = {\r\n    httpStatus: statusCode,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource,\r\n  }\r\n\r\n  statusOptions?.(response)\r\n\r\n  return response\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (400 Bad Request | 401 Unauthorized | 402 Payment Required | 403 Forbidden | 404 Not Found | 405 Method Not Allowed | 406 Not Acceptable | 407 Proxy Authentication Required | 408 Request Timeout | 409 Conflict | 410 Gone | 411 Length Required | 412 Precondition Failed | 413 Payload Too Large | 414 URI Too Long | 415 Unsupported Media Type | 416 Range Not Satisfiable | 417 Expectation Failed | 418 I'm a teapot | 421 Misdirected Request | 422 Unprocessable Entity | 423 Locked | 424 Failed Dependency | 425 Unnasigned | 426 Upgrade Required | 428 Precondition Required | 429 Too Many Requests | 431 Request Header Fields Too Large | 451 Unavailable For Legal Reasons)\r\n * @param input \r\n * @param statusOptions \r\n * @returns \r\n */\r\nexport function Response4xxClientError(statusCode: StatusCode4xx, input?: BaseErrorInput, statusOptions?: Response4xxOpt): GenericClientErrorResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case 400:\r\n        return defaultStatesContent[\"Status400BadRequest\"]\r\n      case 401:\r\n        return defaultStatesContent[\"Status401Unauthorized\"]\r\n      case 402:\r\n        return defaultStatesContent[\"Status402PaymentRequired\"]\r\n      case 403:\r\n        return defaultStatesContent[\"Status403Forbidden\"]\r\n      case 404:\r\n        return defaultStatesContent[\"Status404NotFound\"]\r\n      case 405:\r\n        return defaultStatesContent[\"Status405MethodNotAllowed\"]\r\n      case 406:\r\n        return defaultStatesContent[\"Status406NotAcceptable\"]\r\n      case 407:\r\n        return defaultStatesContent[\"Status407ProxyAuthenticationRequired\"]\r\n      case 408:\r\n        return defaultStatesContent[\"Status408RequestTimeout\"]\r\n      case 409:\r\n        return defaultStatesContent[\"Status409Conflict\"]\r\n      case 410:\r\n        return defaultStatesContent[\"Status410Gone\"]\r\n      case 411:\r\n        return defaultStatesContent[\"Status411LengthRequired\"]\r\n      case 412:\r\n        return defaultStatesContent[\"Status412PreconditionFailed\"]\r\n      case 413:\r\n        return defaultStatesContent[\"Status413PayloadTooLarge\"]\r\n      case 414:\r\n        return defaultStatesContent[\"Status414URITooLong\"]\r\n      case 415:\r\n        return defaultStatesContent[\"Status415UnsupportedMediaType\"]\r\n      case 416:\r\n        return defaultStatesContent[\"Status416RangeNotSatisfiable\"]\r\n      case 417:\r\n        return defaultStatesContent[\"Status417ExpectationFailed\"]\r\n      case 418:\r\n        return defaultStatesContent[\"Status418ImATeapot\"]\r\n      case 421:\r\n        return defaultStatesContent[\"Status421MisdirectedRequest\"]\r\n      case 422:\r\n        return defaultStatesContent[\"Status422UnprocessableEntity\"]\r\n      case 423:\r\n        return defaultStatesContent[\"Status423Locked\"]\r\n      case 424:\r\n        return defaultStatesContent[\"Status424FailedDependency\"]\r\n      case 425:\r\n        return defaultStatesContent[\"Status425TooEarly\"]\r\n      case 426:\r\n        return defaultStatesContent[\"Status426UpgradeRequired\"]\r\n      case 428:\r\n        return defaultStatesContent[\"Status428PreconditionRequired\"]\r\n      case 429:\r\n        return defaultStatesContent[\"Status429TooManyRequests\"]\r\n      case 431:\r\n        return defaultStatesContent[\"Status431RequestHeaderFieldsTooLarge\"]\r\n      case 451:\r\n        return defaultStatesContent[\"Status451UnavailableForLegalReasons\"]\r\n      default:\r\n        return defaultStatesContent[\"Status400BadRequest\"]\r\n    }\r\n  }\r\n\r\n  const defaultValues = defaultValuesSelector()\r\n\r\n  let response: GenericClientErrorResponse = {\r\n    httpStatus: statusCode,\r\n    serverMessage: input?.serverMessage || defaultValues.Message,\r\n    // detail: input?.detail || defaultValues.Details,\r\n    consultedResource: input?.consultedResource,\r\n\r\n    errors: input?.errors,\r\n    errorCode: input?.errorCode,\r\n    errorDescription: input?.errorDescription,\r\n    errorName: input?.errorName,\r\n\r\n    errorDetails: {},\r\n\r\n    error: true,\r\n    success: false\r\n  }\r\n\r\n  statusOptions?.(response)\r\n\r\n  return response\r\n\r\n}\r\n\r\n/**\r\n * \r\n * @param statusCode HTTP Status Code: (500 Internal Server Error | 501 Not Implemented | 502 Bad Gateway | 503 Service Unavailable | 504 Gateway Timeout | 505 HTTP Version Not Supported | 506 Variant Also Negotiates | 507 Insufficient Storage | 508 Loop Detected | 509 Bandwidth Limit Exceeded | 510 Not Extended | 511 Network Authentication Required | 521 Web Server Is Down)\r\n * @param input \r\n * @returns \r\n */\r\nexport function Response5xxServerError(statusCode: StatusCode5xx, input?: BaseErrorInput): GenericServerErrorResponse {\r\n  const defaultValuesSelector = (): HttpStatus => {\r\n    switch (statusCode) {\r\n      case 500:\r\n        return defaultStatesContent[\"Status500InternalServerError\"]\r\n      case 501:\r\n        return defaultStatesContent[\"Status501NotImplemented\"]\r\n      case 502:\r\n        return defaultStatesContent[\"Status502BadGateway\"]\r\n      case 503:\r\n        return defaultStatesContent[\"Status503ServiceUnavailable\"]\r\n      case 504:\r\n        return defaultStatesContent[\"Status504GatewayTimeout\"]\r\n      case 505:\r\n        return defaultStatesContent[\"Status505HTTPVersionNotSupported\"]\r\n      case 506:\r\n        return defaultStatesContent[\"Status506VariantAlsoNegotiates\"]\r\n      case 507:\r\n        return defaultStatesContent[\"Status507InsufficientStorage\"]\r\n      case 508:\r\n        return defaultStatesContent[\"Status508LoopDetected\"]\r\n      case 509:\r\n        return defaultStatesContent[\"Status509BandwidthLimitExceeded\"]\r\n      case 510:\r\n        return defaultStatesContent[\"Status510NotExtended\"]\r\n      case 511:\r\n        return defaultStatesContent[\"Status511NetworkAuthenticationRequired\"]\r\n      case 521:\r\n        return defaultStatesContent[\"Status521WebServerIsDown\"]\r\n      default:\r\n        return defaultStatesContent[\"Status500InternalServerError\"]\r\n    }\r\n  }\r\n\r\n  let response: GenericServerErrorResponse = {\r\n    httpStatus: statusCode,\r\n    serverMessage: input?.serverMessage || defaultValuesSelector().Message,\r\n    detail: input?.detail || defaultValuesSelector().Details,\r\n    consultedResource: input?.consultedResource,\r\n\r\n    errors: input?.errors,\r\n    errorCode: input?.errorCode,\r\n    errorDescription: input?.errorDescription,\r\n    errorName: input?.errorName,\r\n\r\n    error: true,\r\n    success: false\r\n  }\r\n\r\n  return response\r\n}"],"names":["StatusCode","Status100Continue","Code","Status100","Message","Details","Status101SwitchingProtocols","Status101","Status102Processing","Status102","Status103EarlyHints","Status103","Status200OK","Status200","Status201Created","Status201","Status202Accepted","Status202","Status203NonAuthoritativeInformation","Status203","Status205ResetContent","Status205","Status206PartialContent","Status206","Status207MultiStatus","Status207","Status208AlreadyReported","Status208","Status226IMUsed","Status226","Status300MultipleChoices","Status300","Status301MovedPermanently","Status301","Status302Found","Status302","Status303SeeOther","Status303","Status304NotModified","Status304","Status305UseProxy","Status305","Status307TemporaryRedirect","Status307","Status308PermanentRedirect","Status308","Status400BadRequest","Status400","Status401Unauthorized","Status401","Status402PaymentRequired","Status402","Status403Forbidden","Status403","Status404NotFound","Status404","Status405MethodNotAllowed","Status405","Status406NotAcceptable","Status406","Status407ProxyAuthenticationRequired","Status407","Status408RequestTimeout","Status408","Status409Conflict","Status409","Status410Gone","Status410","Status411LengthRequired","Status411","Status412PreconditionFailed","Status412","Status413PayloadTooLarge","Status413","Status414URITooLong","Status414","Status415UnsupportedMediaType","Status415","Status416RangeNotSatisfiable","Status416","Status417ExpectationFailed","Status417","Status418ImATeapot","Status418","Status421MisdirectedRequest","Status421","Status422UnprocessableEntity","Status422","Status423Locked","Status423","Status424FailedDependency","Status424","Status425Unnassigned","Status425","Status426UpgradeRequired","Status426","Status428PreconditionRequired","Status428","Status429TooManyRequests","Status429","Status431RequestHeaderFieldsTooLarge","Status431","Status451UnavailableForLegalReasons","Status451","Status500InternalServerError","Status500","Status501NotImplemented","Status501","Status502BadGateway","Status502","Status503ServiceUnavailable","Status503","Status504GatewayTimeout","Status504","Status505HTTPVersionNotSupported","Status505","Status506VariantAlsoNegotiates","Status506","Status507InsufficientStorage","Status507","Status508LoopDetected","Status508","Status509BandwithLimitExceeded","Status509","Status510NotExtended","Status510","Status511NetworkAuthenticationRequired","Status511","Status521WebServerIsDown","Status521","Response1xxInformative","statusCode","input","defaultValues","defaultStatesContent","defaultValuesSelector","httpStatus","serverMessage","detail","consultedResource","statusOptions","response","success","error","Response3xxRedirection","Response4xxClientError","errors","errorCode","errorDescription","errorName","errorDetails","Response5xxServerError"],"mappings":"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"}